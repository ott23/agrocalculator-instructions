Структура системы:
- AgroCalculator Server (Java, Spring Boot)
- AgroCalculator Web (TypeScript, Angular 5)
- AgroCalculator Rest (Java, Spring Boot)
- AgroCalculator Gate (Java, Spring Boot)
- AgroCalculator Calc (Java, Spring Boot)


OS & opensource системы:
- Ubuntu Server 18.04
- Apache Kafka
- Apache Zookeeper
- Kafka Manager (система мониторинга)
- Apache Cassandra
- H2
- Redis (технология освоена, но не внедрена, сервисы написаны)
- Tomcat 9 (для веб-морды сервера)


Описание системы см. файл "AgroCalculator.odt"
Описание процесса установки системы см. файл "Настройка Agrocalculator"
Описание процесса установки Apache Kafka и Apache Zookeeper см. файл "Инструкция - Установка и настройка Zookeeper и Kafka"
Описание процесса установки Kafka Manager см. файл "Инструкция - Установка Kafka Manager"
Описание процесса установки Apache Cassandra см. файлы "Инструкция - Установка и настройка Cassandra" и "Cassandra Tables"
Описание процесса установки Redis см. файл "Инструкция - Установка и настройка Redis"
Описание процесса установки Tomcat 9 см. файл "Инструкция - Установка и настройка Tomcat 9"


AgroCalculator Server:
- использованные библиотеки: Lombok, Jackson, JWT, Netty
- взаимодействует с базами данных Cassandra и H2 и всеми нодами
- реализованы пакеты:
	1) databases - отвечает за работу с базами данных Apache Cassandra и H2
	2) node - отвечает за автозапуск приложения
	3) nodeserver - отвечает за управление нодами, работает по TCP/IP
	4) web - отвечает за интерфейс управления сервером
- проведён рефакторинг всех пакетов
- написаны комментарии
- сквозной функционал вынесен в аспекты


AgroCalculator Web:
- использованные библиотеки: JWT
- взаимодействует с интерфейсом управления сервером AgroCalculator Server


AgroCalculator Rest:
- использованные библиотеки: Lombok, Jackson, Kafka, Netty
- взаимодействует с базами данных Cassandra и H2 и сервером
- реализованы пакеты:
	1) databases - отвечает за работу с базами данных Apache Cassandra и H2
	2) node - отвечает за автозапуск приложения, содержит командный процессор
	3) nodeclient - отвечает за общение с сервером по TCP/IP
	4) web - отвечает за клиентский интерфейс
- проведён рефакторинг всех пакетов
- написаны комментарии
- сквозной функционал вынесен в аспекты


AgroCalculator Gate:
- использованные библиотеки: Lombok, Jackson, Netty
- взаимодействует с базами данных Cassandra и H2 и сервером
- реализованы пакеты:
	1) databases - отвечает за работу с базами данных Apache Cassandra и H2
	2) gateserver - отвечает за приём сообщений с устройств и ретрансляторов, работает по TCP/IP
	3) node - отвечает за автозапуск приложения, содержит командный процессор
	4) nodeclient - отвечает за общение с сервером по TCP/IP
- проведён рефакторинг всех пакетов
- написаны комментарии
- сквозной функционал вынесен в аспекты


AgroCalculator Rest:
- использованные библиотеки: Lombok, Jackson, Kafka, Netty, GeoTools
- взаимодействует с базами данных Cassandra и H2 и сервером
- реализованы пакеты:
	1) calculator: содержит вычислительные модули, получает и отпрвляет информацию по Kafka 
	1) databases - отвечает за работу с базами данных Apache Cassandra и H2
	2) node - отвечает за автозапуск приложения, содержит командный процессор
	3) nodeclient - отвечает за общение с сервером по TCP/IP
	4) web - отвечает за клиентский интерфейс
- проведён рефакторинг всех пакетов
- написаны комментарии
- сквозной функционал вынесен в аспекты

